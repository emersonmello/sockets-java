plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'engtelecom.std.App'
}

// Tarefa para executar o servidor
// Execute a tarefa com o comando `./gradlew servidor`
task servidor(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    description = 'Executa o servidor'
    group = 'application'
    main = 'engtelecom.std.servidor.Servidor'
}

// Tarefa para executar o cliente
// Execute a tarefa com o comando `./gradlew cliente`
task cliente(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    description = 'Executa o cliente'
    group = 'application'
    main = 'engtelecom.std.cliente.Cliente'
}

tasks.named('test') {
    useJUnitPlatform()
}
